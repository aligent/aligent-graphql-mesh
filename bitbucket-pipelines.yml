image: node:18

definitions:
  steps:
    - step: &install
        name: 🧶 Install
        script:
          - yarn install
        artifacts:
          - node_modules/**

    - step: &test
        name: ⚙️ Test
        script:
          - FORCE_COLOR=true
          - yarn test

    - step: &code-quality
        name: 🕵️‍♀️ Code Quality
        script:
          - FORCE_COLOR=true
          - yarn lint
          - yarn format
          - yarn check-types

    - step: &build
        name: 🏭 Build Mesh
        script:
          - STAGE=prod yarn build
        artifacts:
          - src/meshrc/.mesh/**

    - step: &build-container
        name: 🏗️ Build Docker Container
        services:
          - docker
        script:
          - yarn build:docker
          - docker save mesh:latest | gzip > mesh_latest.tar.gz
        artifacts:
          - mesh_latest.tar.gz

    - step: &deploy
        name: 📦 Push to ECR
        services:
          - docker
        script:
          - docker load --input mesh_latest.tar.gz
          - docker tag mesh:latest ${IMAGE_NAME}:latest
          - pipe: atlassian/aws-ecr-push-image:2.0.0
            variables:
              IMAGE_NAME: ${IMAGE_NAME}

pipelines:
  pull-requests:
    '**':
      - step: *install
      - step: *build
      - parallel:
        - step: *build-container
        - step: *code-quality
        - step: *test

  branches:
    main:
      - step: *install
      - step: *build
      - step: *build-container
      - step: *deploy
