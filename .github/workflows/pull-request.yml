name: Pull Request Checks

on:
  pull_request:
    branches:
      - '**' # Trigger on all branches

jobs:
  test:
    name: ‚öôÔ∏è Run Tests
    runs-on: ubuntu-latest
    env: ${{ secrets }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Fetch target
        env:
          BASE_REF: ${{ github.event.pull_request.base.ref }}
        run: git fetch origin $BASE_REF

      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'

      - name: Install
        run: yarn install

      - name: Run Tests
        env:
          FORCE_COLOR: 'true'
          BASE_REF: ${{ github.event.pull_request.base.ref }}
        run: |
          yarn nx affected:test --base=origin/$BASE_REF --ci --code-coverage --parallel --max-parallel=3

  code-quality:
    name: üïµÔ∏è‚Äç‚ôÄÔ∏è Code Quality
    runs-on: ubuntu-latest
    env: ${{ secrets }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Fetch target
        env:
          BASE_REF: ${{ github.event.pull_request.base.ref }}
        run: git fetch origin $BASE_REF

      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'

      - name: Install
        run: yarn install

      - name: Code Quality Check
        env:
          FORCE_COLOR: 'true'
          BASE_REF: ${{ github.event.pull_request.base.ref }}
        run: |
          yarn nx affected:lint --base=origin/$BASE_REF --parallel --max-parallel=3
          yarn nx format:check --base=origin/$BASE_REF --parallel --max-parallel=3
          yarn nx affected -t check-types --base=origin/$BASE_REF --parallel --max-parallel=3

  # TODO: fix the owasp pipeline
  # owasp:
  #   name: üõ°Ô∏è OWASP Scan
  #   uses: ./.github/workflows/owasp.yml
  #   secrets: inherit

  build:
    name: üë∑ Build
    strategy:
      fail-fast: false
      matrix:
        application: [bigcommerce-mesh, orocommerce-mesh]
    uses: ./.github/workflows/build.yml
    with:
      application: ${{ matrix.application }}
    secrets: inherit
